buildscript {
    if (!ext.has("kotlin_version")) {
        ext.kotlin_version = '1.7.20'
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

// This is handled by dependencyResolutionManagement at the top level now
/*
allprojects {
    repositories {
        google()
        mavenCentral()
    }
}
*/

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

ext.maplyBuildNative = !ext.has("maplyBuildNative") || maplyBuildNative.toBoolean()
println maplyBuildNative ? "Maply building native cmake" : "Maply skipping native build"

android {
    compileSdkVersion 32
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildTypes {
            debug {
                debuggable true
                jniDebuggable true
                if (maplyBuildNative) {
                    ndk {
                        abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
                        debuggable true
                    }
                    externalNativeBuild {
                        cmake {
                            cppFlags "-g",              // enable debug info
                                    "-DDEBUG=1",            // Debug flags
                                    "-DCMAKE_BUILD_TYPE=Debug",
                                    "-O0",
                                    //"-O1",                  // Minimal optimize. (-Wuninitialized requires -O1)
                                    // Change to -O0 if you're having trouble debugging
                                    "-Wall", "-Wextra",     // warnings
                                    "-Wno-unknown-pragmas", // ignore, e.g., clang-tidy annotations

                                    "-Wuninitialized",      // requires -O1 or above, but doesn't seem to work anyway
                                    "-Wmissing-field-initializers",
                                    "-Woverloaded-virtual",

                                    "-Wno-unused-parameter",
                                    "-Wno-unused-private-field",
                                    "-Wno-reorder",
                                    "-Wno-sign-compare",
                                    "-Wno-missing-braces",
                                    "-Wno-null-pointer-arithmetic"
                        }
                    }
                }
            }
            devRelease {
                debuggable true
                jniDebuggable true
                if (maplyBuildNative) {
                    ndk {
                        abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
                        debuggable true
                    }
                    externalNativeBuild {
                        cmake {
                            cppFlags "-O2", "-DNDEBUG=1",
                                    "-DCMAKE_BUILD_TYPE=Release",
                                    "-DWK_MIN_LOG_LEVEL=WKLogLevel::Verbose"
                        }
                    }
                }
            }
            release {
                debuggable false
                jniDebuggable false
                if (maplyBuildNative) {
                    ndk {
                        abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
                        debuggable false
                    }
                    externalNativeBuild {
                        cmake {
                            cppFlags "-O2", "-DNDEBUG=1", "-DCMAKE_BUILD_TYPE=Release"
                        }
                    }
                }
            }
        }

        if (maplyBuildNative) {
            externalNativeBuild {
                cmake {
                    cppFlags "-frtti", "-fexceptions", "-std=gnu++14",
                             "-DLODEPNG_NO_COMPILE_ENCODER",     // Match RawPNGImage.cpp
                             "-DLODEPNG_NO_COMPILE_DISK",
                             "-DLODEPNG_NO_COMPILE_ANCILLARY_CHUNKS",
                             "-DLODEPNG_NO_COMPILE_ERROR_TEXT",
                             "-DLODEPNG_NO_COMPILE_CPP",
                             "-DLODEPNG_COMPILE_ZLIB"
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    if (maplyBuildNative) {
        externalNativeBuild {
            cmake {
                path "CMakeLists.txt"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    lintOptions {
        //disable 'TypographyFractions','TypographyQuotes'
        //enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
        //check 'NewApi', 'InlinedApi'
        abortOnError false
    }
    testOptions {
        reportDir "build/outputs/reports"
        resultsDir "build/outputs/results"
        unitTests {
            all {
                //jvmArgs '-XX:MaxPermSize=256m'
                //if (it.name == 'testDebugUnitTest') {
                //    systemProperty 'debug', 'true'
                //}
            }
        }
    }
    ndkVersion '21.3.6528147'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'com.google.android.gms:play-services-location:21.0.1'
}
